"""
This program has been written to solve problem 8 on projecteuler.net
author: Jeremiah Lantzer
"""

# woah
number_1000 = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
consec_nums = 13     # the amount of consecutive numbers we are looking for
last_sum = 0


def find_product(num_length, num_string):
    store_product_2 = 1
    for j in range(num_length):
        if num_string[j:j + 1] != '':
            store_product_2 *= int(num_string[j:j+1])
    return store_product_2


for i in range(len(number_1000)):
    temp_string = number_1000[i:i+consec_nums]
    print("4-Digits: ", temp_string)
    print("last digit: ", temp_string[i+consec_nums-1:i+consec_nums])
    if len(temp_string) >= consec_nums:
        store_product = find_product(consec_nums, temp_string)
        print("Product: ", store_product)

    if store_product > last_sum:
        last_sum = store_product

print("Answer: ", last_sum)
